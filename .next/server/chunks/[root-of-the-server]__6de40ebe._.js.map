{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 122, "column": 0}, "map": {"version":3,"sources":["file:///app/src/lib/auth.ts"],"sourcesContent":["import { hash, compare } from \"bcryptjs\";\n\nexport async function hashPassword(password: string) {\n  return hash(password, 12);\n}\n\nexport async function comparePasswords(\n  plainPassword: string,\n  hashedPassword: string,\n) {\n  return compare(plainPassword, hashedPassword);\n}\n"],"names":[],"mappings":";;;;AAAA;;AAEO,eAAe,aAAa,QAAgB;IACjD,OAAO,CAAA,GAAA,mIAAA,CAAA,OAAI,AAAD,EAAE,UAAU;AACxB;AAEO,eAAe,iBACpB,aAAqB,EACrB,cAAsB;IAEtB,OAAO,CAAA,GAAA,mIAAA,CAAA,UAAO,AAAD,EAAE,eAAe;AAChC","debugId":null}},
    {"offset": {"line": 148, "column": 0}, "map": {"version":3,"sources":["file:///app/src/env.js"],"sourcesContent":["// Simple mock env for development\nexport const env = {\n  AUTH_SECRET: process.env.AUTH_SECRET || \"mock-auth-secret\",\n  DATABASE_URL: process.env.DATABASE_URL || \"postgresql://mock:mock@localhost:5432/mock\",\n  NODE_ENV: process.env.NODE_ENV || \"development\",\n  AWS_ACCESS_KEY_ID: process.env.AWS_ACCESS_KEY_ID || \"mock-access-key\",\n  AWS_SECRET_ACCESS_KEY: process.env.AWS_SECRET_ACCESS_KEY || \"mock-secret-key\",\n  AWS_REGION: process.env.AWS_REGION || \"us-east-1\",\n  S3_BUCKET_NAME: process.env.S3_BUCKET_NAME || \"mock-bucket\",\n  PROCESS_VIDEO_ENDPOINT: process.env.PROCESS_VIDEO_ENDPOINT || \"https://mock-endpoint.com\",\n  PROCESS_VIDEO_ENDPOINT_AUTH: process.env.PROCESS_VIDEO_ENDPOINT_AUTH || \"mock-auth\",\n  NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY: process.env.NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY || \"pk_test_mock\",\n  STRIPE_SECRET_KEY: process.env.STRIPE_SECRET_KEY || \"sk_test_mock\",\n  STRIPE_SMALL_CREDIT_PACK: process.env.STRIPE_SMALL_CREDIT_PACK || \"price_mock\",\n  STRIPE_MEDIUM_CREDIT_PACK: process.env.STRIPE_MEDIUM_CREDIT_PACK || \"price_mock\",\n  STRIPE_LARGE_CREDIT_PACK: process.env.STRIPE_LARGE_CREDIT_PACK || \"price_mock\",\n  BASE_URL: process.env.BASE_URL || \"http://localhost:3000\",\n  STRIPE_WEBHOOK_SECRET: process.env.STRIPE_WEBHOOK_SECRET || \"whsec_mock\",\n};\n"],"names":[],"mappings":"AAAA,kCAAkC;;;;AAC3B,MAAM,MAAM;IACjB,aAAa,QAAQ,GAAG,CAAC,WAAW,IAAI;IACxC,cAAc,QAAQ,GAAG,CAAC,YAAY,IAAI;IAC1C,UAAU,mDAAwB;IAClC,mBAAmB,QAAQ,GAAG,CAAC,iBAAiB,IAAI;IACpD,uBAAuB,QAAQ,GAAG,CAAC,qBAAqB,IAAI;IAC5D,YAAY,QAAQ,GAAG,CAAC,UAAU,IAAI;IACtC,gBAAgB,QAAQ,GAAG,CAAC,cAAc,IAAI;IAC9C,wBAAwB,QAAQ,GAAG,CAAC,sBAAsB,IAAI;IAC9D,6BAA6B,QAAQ,GAAG,CAAC,2BAA2B,IAAI;IACxE,oCAAoC,yDAAkD;IACtF,mBAAmB,QAAQ,GAAG,CAAC,iBAAiB,IAAI;IACpD,0BAA0B,QAAQ,GAAG,CAAC,wBAAwB,IAAI;IAClE,2BAA2B,QAAQ,GAAG,CAAC,yBAAyB,IAAI;IACpE,0BAA0B,QAAQ,GAAG,CAAC,wBAAwB,IAAI;IAClE,UAAU,QAAQ,GAAG,CAAC,QAAQ,IAAI;IAClC,uBAAuB,QAAQ,GAAG,CAAC,qBAAqB,IAAI;AAC9D","debugId":null}},
    {"offset": {"line": 176, "column": 0}, "map": {"version":3,"sources":["file:///app/src/server/db.ts"],"sourcesContent":["import { PrismaClient } from \"@prisma/client\";\n\nimport { env } from \"~/env\";\n\nconst createPrismaClient = () =>\n  new PrismaClient({\n    log:\n      env.NODE_ENV === \"development\" ? [\"query\", \"error\", \"warn\"] : [\"error\"],\n  });\n\nconst globalForPrisma = globalThis as unknown as {\n  prisma: ReturnType<typeof createPrismaClient> | undefined;\n};\n\nexport const db = globalForPrisma.prisma ?? createPrismaClient();\n\nif (env.NODE_ENV !== \"production\") globalForPrisma.prisma = db;\n"],"names":[],"mappings":";;;AAAA;AAEA;;;AAEA,MAAM,qBAAqB,IACzB,IAAI,6HAAA,CAAA,eAAY,CAAC;QACf,KACE,4GAAA,CAAA,MAAG,CAAC,QAAQ,KAAK,gBAAgB;YAAC;YAAS;YAAS;SAAO,GAAG;YAAC;SAAQ;IAC3E;AAEF,MAAM,kBAAkB;AAIjB,MAAM,KAAK,gBAAgB,MAAM,IAAI;AAE5C,IAAI,4GAAA,CAAA,MAAG,CAAC,QAAQ,KAAK,cAAc,gBAAgB,MAAM,GAAG","debugId":null}},
    {"offset": {"line": 201, "column": 0}, "map": {"version":3,"sources":["file:///app/src/server/auth/config.ts"],"sourcesContent":["import { PrismaAdapter } from \"@auth/prisma-adapter\";\nimport { type DefaultSession, type NextAuthConfig } from \"next-auth\";\nimport CredentialsProvider from \"next-auth/providers/credentials\";\nimport { comparePasswords } from \"~/lib/auth\";\n\nimport { db } from \"~/server/db\";\n\n/**\n * Module augmentation for `next-auth` types. Allows us to add custom properties to the `session`\n * object and keep type safety.\n *\n * @see https://next-auth.js.org/getting-started/typescript#module-augmentation\n */\ndeclare module \"next-auth\" {\n  interface Session extends DefaultSession {\n    user: {\n      id: string;\n      // ...other properties\n      // role: UserRole;\n    } & DefaultSession[\"user\"];\n  }\n\n  // interface User {\n  //   // ...other properties\n  //   // role: UserRole;\n  // }\n}\n\n/**\n * Options for NextAuth.js used to configure adapters, providers, callbacks, etc.\n *\n * @see https://next-auth.js.org/configuration/options\n */\nexport const authConfig = {\n  providers: [\n    CredentialsProvider({\n      name: \"credentials\",\n      credentials: {\n        email: { label: \"Email\", type: \"email\" },\n        password: { label: \"Password\", type: \"password\" },\n      },\n      async authorize(credentials) {\n        if (!credentials?.email || !credentials?.password) {\n          return null;\n        }\n\n        const email = credentials.email as string;\n        const password = credentials.password as string;\n\n        const user = await db.user.findUnique({\n          where: { email },\n        });\n\n        if (!user) {\n          return null;\n        }\n\n        const passwordMatch = await comparePasswords(password, user.password);\n        if (!passwordMatch) return null;\n\n        return user;\n      },\n    }),\n  ],\n  session: { strategy: \"jwt\" },\n  adapter: PrismaAdapter(db),\n  callbacks: {\n    session: ({ session, token }) => ({\n      ...session,\n      user: {\n        ...session.user,\n        id: token.sub,\n      },\n    }),\n    jwt: ({ token, user }) => {\n      if (user) {\n        token.id = user.id;\n      }\n      return token;\n    },\n  },\n} satisfies NextAuthConfig;\n"],"names":[],"mappings":";;;AAAA;AAEA;AAAA;AACA;AAEA;;;;;;;;;AA4BO,MAAM,aAAa;IACxB,WAAW;QACT,CAAA,GAAA,4LAAA,CAAA,UAAmB,AAAD,EAAE;YAClB,MAAM;YACN,aAAa;gBACX,OAAO;oBAAE,OAAO;oBAAS,MAAM;gBAAQ;gBACvC,UAAU;oBAAE,OAAO;oBAAY,MAAM;gBAAW;YAClD;YACA,MAAM,WAAU,WAAW;gBACzB,IAAI,CAAC,aAAa,SAAS,CAAC,aAAa,UAAU;oBACjD,OAAO;gBACT;gBAEA,MAAM,QAAQ,YAAY,KAAK;gBAC/B,MAAM,WAAW,YAAY,QAAQ;gBAErC,MAAM,OAAO,MAAM,qHAAA,CAAA,KAAE,CAAC,IAAI,CAAC,UAAU,CAAC;oBACpC,OAAO;wBAAE;oBAAM;gBACjB;gBAEA,IAAI,CAAC,MAAM;oBACT,OAAO;gBACT;gBAEA,MAAM,gBAAgB,MAAM,CAAA,GAAA,oHAAA,CAAA,mBAAgB,AAAD,EAAE,UAAU,KAAK,QAAQ;gBACpE,IAAI,CAAC,eAAe,OAAO;gBAE3B,OAAO;YACT;QACF;KACD;IACD,SAAS;QAAE,UAAU;IAAM;IAC3B,SAAS,CAAA,GAAA,sJAAA,CAAA,gBAAa,AAAD,EAAE,qHAAA,CAAA,KAAE;IACzB,WAAW;QACT,SAAS,CAAC,EAAE,OAAO,EAAE,KAAK,EAAE,GAAK,CAAC;gBAChC,GAAG,OAAO;gBACV,MAAM;oBACJ,GAAG,QAAQ,IAAI;oBACf,IAAI,MAAM,GAAG;gBACf;YACF,CAAC;QACD,KAAK,CAAC,EAAE,KAAK,EAAE,IAAI,EAAE;YACnB,IAAI,MAAM;gBACR,MAAM,EAAE,GAAG,KAAK,EAAE;YACpB;YACA,OAAO;QACT;IACF;AACF","debugId":null}},
    {"offset": {"line": 278, "column": 0}, "map": {"version":3,"sources":["file:///app/src/server/auth/index.ts"],"sourcesContent":["import NextAuth from \"next-auth\";\nimport { cache } from \"react\";\n\nimport { authConfig } from \"./config\";\n\nconst { auth: uncachedAuth, handlers, signIn, signOut } = NextAuth(authConfig);\n\nconst auth = cache(uncachedAuth);\n\nexport { auth, handlers, signIn, signOut };\n"],"names":[],"mappings":";;;;;;AAAA;AAAA;AACA;AAEA;;;;;;;;AAEA,MAAM,EAAE,MAAM,YAAY,EAAE,QAAQ,EAAE,MAAM,EAAE,OAAO,EAAE,GAAG,CAAA,GAAA,uJAAA,CAAA,UAAQ,AAAD,EAAE,iIAAA,CAAA,aAAU;AAE7E,MAAM,OAAO,CAAA,GAAA,uMAAA,CAAA,QAAK,AAAD,EAAE","debugId":null}},
    {"offset": {"line": 305, "column": 0}, "map": {"version":3,"sources":["file:///app/src/app/api/auth/%5B...nextauth%5D/route.ts"],"sourcesContent":["import { handlers } from \"~/server/auth\";\n\nexport const { GET, POST } = handlers;\n"],"names":[],"mappings":";;;;AAAA;;;;;;AAEO,MAAM,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,gIAAA,CAAA,WAAQ","debugId":null}}]
}